body                 ::= (entry NL)* (entry)? EOF;
entry                ::= comment
                      | section
                      | message
                      ;

comment              ::= '#' .*;
section              ::= '[[' __ keyword __ ']]';

__                   ::= [ \t]*;
NL                   ::= [\r\n]+;

identifier           ::= [a-zA-Z_.?-] ([a-zA-Z0-9_.?-])*;
variable             ::= '$' identifier;
keyword              ::= [a-zA-Z_.?-] ([a-zA-Z0-9_.?- ]* [a-zA-Z0-9_.?-])?;
builtin              ::= [A-Z_.?-]+;
number               ::= [0-9]+ ('.' [0-9]+)?;

member-key           ::= number | (identifier '/')? keyword;
member               ::= '[' member-key ']' __ pattern NL;
default-member       ::= '*' member;
variants-list        ::= NL (__ member)* __ default-member (__ member)*;
traits-list          ::= variants-list | NL (__ member)+;

message              ::= identifier __ '=' __ (pattern | pattern traits-list | traits-list);
pattern              ::= unquoted-pattern
                      |  quoted-pattern
                      ;
unquoted-pattern     ::= (unquoted-text | placeable | block-text)+;
quoted-pattern       ::= '"' (quoted-text | placeable)* '"';
unquoted-text        ::= ([^{] | '\{')+;
quoted-text          ::= ([^{"] | '\{' | '\"')+;
block-text           ::= NL __ '|' unquoted-pattern;

placeable            ::= '{' __ expression __ '}';
expression           ::= quoted-pattern
                      |  number
                      |  identifier
                      |  variable
                      |  select-expression
                      |  member-expression
                      |  call-expression
                      ;
select-expression    ::= expression __ ' ->' __ variants-list;
member-expression    ::= identifier '[' keyword ']';
call-expression      ::= builtin '(' __ NL? arglist? __ NL? ')';
arglist              ::= argument (__ NL? ',' __ NL? arglist)?;
argument             ::= expression
                      |  keyword-argument;
keyword-argument     ::= identifier __ ':' __ quoted-pattern;
