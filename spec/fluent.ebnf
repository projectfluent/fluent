body                 ::= blank-line* (entry line-break blank-line*)* entry? EOF
entry                ::= comment
                       | section
                       | message

comment              ::= ('#' (inline-space (char - line-break)*)? line-break)+
                       | ('##' (inline-space (char - line-break)*)? line-break)+
                       | ('###' (inline-space (char - line-break)*)? line-break)+

char                 ::= [https://www.w3.org/TR/REC-xml/#NT-Char]
hexdigit             ::= [0-9a-fA-F]

/* line feed, carriage return; space, tab */
line-break           ::= [#xA#xD]+
inline-space         ::= [#x20#x9]+
blank-line           ::= inline-space* line-break

/* if you break lines you need to indent afterwards */
break-indent         ::= line-break blank-line* inline-space+

/* aliases for convenience */
_                    ::= inline-space
__                   ::= break-indent

identifier           ::= [a-zA-Z] [a-zA-Z0-9_-]*
private-identifier   ::= '-' identifier
external-identifier  ::= '$' identifier

/* exclude whitespace and [ \ ] { } */
word                 ::= (((char - line-break) - inline-space) - [#x5b#x5c#x5d#x7b#x7d])+
builtin              ::= [A-Z] [A-Z_?-]*
number               ::= '-'? [0-9]+ ('.' [0-9]+)?

variant-key          ::= number | word (_ word)*
variant              ::= __ '[' _? variant-key _? ']' __ pattern
default-variant      ::= __ '*[' _? variant-key _? ']' __ pattern
variant-list         ::= variant* default-variant variant* line-break

attribute            ::= __ '.' identifier value

message              ::= identifier (value attribute* | attribute+)
                       | private-identifier value attribute*

value                ::= _? '=' __? pattern
pattern              ::= (text | placeable)+
/* text can only include newlines if they're followed by an indent */
/* \ and { must be escaped */
text-char            ::= (char - line-break) - [#x5c#x7b]
                       | break-indent
                       | '\u' hexdigit hexdigit hexdigit hexdigit
                       | '\' [#x5c#x7b]
text                 ::= text-char+
/* in quoted-text " must be escaped */
quoted-text          ::= '"' (text-char - '"' | '\"')+ '"'

placeable            ::= '{' __? (inline-expression | block-expression) __? '}'
inline-expression    ::= quoted-text
                       | number
                       | external-identifier
                       | identifier
                       | public-attribute-expression
                       | private-identifier
                       | private-variant-expression
                       | call-expression
                       | placeable
block-expression     ::= select-expression
                       | variant-list

select-expression    ::= selector-expression __ '->' __ variant-list
selector-expression  ::= quoted-text
                       | number
                       | external-identifier
                       | private-attribute-expression
                       | call-expression

public-attribute-expression  ::= identifier '.' identifier
private-attribute-expression ::= private-identifier '.' identifier
private-variant-expression   ::= private-identifier '[' _? variant-key _? ']'

call-expression      ::= builtin '(' __? argument-list? __? ')'
argument-list        ::= argument ( __? ',' __? argument)* __? ','?
argument             ::= inline-expression
                       | named-argument
named-argument       ::= identifier __? ':' __? (quoted-text | number)
